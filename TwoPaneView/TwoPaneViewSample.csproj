<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0-android</TargetFrameworks>
		<!--<TargetFrameworks>net8.0-android;net8.0-ios</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>-->
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>MauiTwoPaneViewDemo</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>

		<!-- Display name -->
		<ApplicationTitle>MauiTwoPaneViewDemo</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.mauitwopaneviewdemo</ApplicationId>
		<ApplicationIdGuid>7f2dee2d-3733-4bed-9b25-5ad62422912d</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>-->
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.19041.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.19041.0</TargetPlatformMinVersion>-->
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="Microsoft.Maui.Controls.Foldable" Version="8.0.21" />
	</ItemGroup>

	
	
	
	<UsingTask TaskName="Babel" AssemblyFile="$(ProjectDir)Babel\Babel.Build.dll" Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'" />

	<Target Name="Obfuscate" AfterTargets="Compile" Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<ItemGroup>
			<_BabelSearchDirectories Include="@(ReferencePathWithRefAssemblies->'%(rootdir)%(directory)')" Condition="'%(Extension)' == '.dll'" />
			<BabelSearchDirectories Include="@(_BabelSearchDirectories-&gt;Distinct())" />
		</ItemGroup>

		<Babel InputFile="$(ProjectDir)$(IntermediateOutputPath)$(TargetFileName)" OutputFile="$(ProjectDir)$(IntermediateOutputPath)$(TargetFileName)" GenerateDebug="true" StringEncryption="hash" SearchDirectories="@(BabelSearchDirectories)" ObfuscateTypes="true" ObfuscateEvents="true" ObfuscateMethods="true" ObfuscateProperties="true" ObfuscateFields="true" ObfuscateXaml="true" VirtualFunctions="true" UnicodeNormalization="false" FlattenNamespaces="true" ResourceEncryption="true" ControlFLowObfuscation="if=on;switch=on;case=on;call=on" ControlFLowIterations="3" GenerateLogFile="true" GenerateMapOutFile="true" />
	</Target>	

	
	

	<ItemGroup>
	  <PackageReference Include="Microsoft.Maui.Controls" Version="8.0.21" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="8.0.21" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\SecondAssembly\TestAssembly.csproj" />
	</ItemGroup>

	<Import Project="BabelObfuscate.props" Condition=" '$(Configuration)' == 'Release' " />
	
</Project>
